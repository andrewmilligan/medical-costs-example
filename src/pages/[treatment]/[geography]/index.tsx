import Head from "next/head";
import type {
  InferGetStaticPropsType,
  GetStaticProps,
  GetStaticPaths,
} from "next";
import {
  QueryClient,
  QueryClientProvider,
} from "@tanstack/react-query";
import StickyHeader from "@/components/StickyHeader";
import HeroSplash from "@/components/HeroSplash";
import MainContent from "@/components/MainContent";
import Dashboard from "@/components/Dashboard";
import Footer from "@/components/Footer";
import labels from "@/data/labels.json";
import costs from "@/data/cost.json";

export const getStaticPaths = (async () => {
  const routes = new Map<string, Set<string>>();
  const slugById = new Map(labels.map((label) => [
    label.id,
    label.slug,
  ]));
  costs.forEach((cost) => {
    const slug = slugById.get(cost.id);

    if (!slug) {
      throw new Error(`missing slug ${cost.id}`);
    }

    const geos = routes.get(slug) || new Set();
    geos.add(cost.geo_level);
  });
  return {
    paths: [...routes].map(([slug, geos]) => [...geos].map((geo) => ({
      params: {
        treatment: slug,
        geography: geo,
      },
    }))).flat(),
    fallback: false,
  };
}) satisfies GetStaticPaths;

export const getStaticProps = (async (context) => {
  return {
    props: {
      treatment: `${context.params?.treatment}`,
      geography: `${context.params?.geography}`,
    },
  };
}) satisfies GetStaticProps<{
  treatment: string;
  geography: string;
}>

const queryClient = new QueryClient();

export default function Treatment(props: InferGetStaticPropsType<typeof getStaticProps>) {
  return (
    <>
      <Head>
        <title>Medical Costs</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <QueryClientProvider client={queryClient}>
        {props.treatment && props.geography && (
          <div>
            <StickyHeader treatment={props.treatment} geography={props.geography} />
            <HeroSplash treatment={props.treatment} geography={props.geography} />
            <MainContent>
              <Dashboard treatment={props.treatment} geography={props.geography} />
              <Footer />
            </MainContent>
          </div>
        )}
      </QueryClientProvider>
    </>
  );
}
